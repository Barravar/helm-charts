{{- range $cronjob := .Values.jobs }}
{{- if hasKey $cronjob "name" }}
  {{- $jobName := $cronjob.name }}
  {{ $jobFile := $.Files.Get (printf "janitor-jobs/%s" $jobName) | fromYaml }}
  {{ $cronjob := mergeOverwrite (deepCopy $jobFile) (deepCopy $cronjob) }}
  {{- range $efsName,$efsData := $cronjob.efsVolumes }}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ $efsName }}
  labels:
    baseChart: {{ template "base_chart" $ }} 
    release: {{ $.Release.Name }}
    {{- include "sstk_cronjob.business_labels" $ | indent 4 }}
    {{- range $key, $value := ($cronjob).labels }}
    {{ $key | quote }}: {{ $value | quote }}
    {{- end}}
  annotations:
    {{- include "sstk_cronjob.business_annotations" $ | indent 4 }}
    {{- range $key, $value := $cronjob.annotations }}
    {{ $key | quote }}: {{ $value | quote }}
    {{- end}}  
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - {{ $efsData.accessMode | default "ReadWriteOnce" }}
  persistentVolumeReclaimPolicy: Retain
  {{- if or (not (hasKey $efsData "csiEnable")) ($efsData.csiEnable) }}
  csi:
    driver: nfs.csi.k8s.io
    volumeHandle: {{ printf "%s#/#%s" $efsData.efsDns $efsData.volumeHandle }}
    volumeAttributes:
      server: {{ $efsData.efsDns }}
      share: {{ $efsData.share | quote }}
  {{- else }}
  nfs:
    server: {{ $efsData.efsDns }}
    path: {{ $efsData.path }}
  {{- end }}  
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ $efsName }}
  namespace: {{ $.Release.Namespace }}
  labels:
    baseChart: {{ template "base_chart" $ }} 
    release: {{ $.Release.Name }}
    {{- include "sstk_cronjob.business_labels" $ | indent 4 }}
    {{- range $key, $value := ($cronjob).labels }}
    {{ $key | quote }}: {{ $value | quote }}
    {{- end}}
  annotations:
    {{- include "sstk_cronjob.business_annotations" $ | indent 4 }}
    {{- range $key, $value := $cronjob.annotations }}
    {{ $key | quote }}: {{ $value | quote }}
    {{- end}}  
spec:
  accessModes:
    - {{ $efsData.accessMode | default "ReadWriteOnce" }}
  resources:
    requests:
      storage: 10000Gi
  storageClassName: ""
  selector:
    matchLabels:
      name: {{ $efsName }}
  {{- end }}
{{- end }}
{{- end }}
